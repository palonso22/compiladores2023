let suma (x y : Nat) : Nat = x + y
let suma1 : Nat -> Nat = suma 1

let rec recMap2 (n:Nat) (f:Nat->Nat) (f2:Nat ->Nat) (m:Nat)  : Nat = ifz n then m 
                                                                    else recMap2 (n-1) f f2 (f (f2 (f m))) 


let printer (x : Nat) : Nat = print "" x
let ans2 : Nat = print "" (recMap2 5 suma1 printer 12)